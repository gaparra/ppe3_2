/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package appli_etudiants;

import com.mysql.jdbc.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author g.parra
 */
public class ModifRole extends javax.swing.JDialog {

    private InterfaceGraphique fenetre;
    private Personne gens;

    /**
     * Creates new form ModifRole
     */
    public ModifRole(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        //positionnement au milieu de la fenetre parente
        this.setLocationRelativeTo(parent);
        //modal==true signifie que l'on ne peut pas revenir 
        //sur la precedente fenêtre dans fermer connexion
        this.setModal(true);
        //on stocke dans this.fenetre la référence vers la fenetre parente
        this.fenetre = (InterfaceGraphique) parent;
    }

    public void AjoutInfo(Personne gens) {
        this.gens = gens;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListNonCadre = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButtonProm = new javax.swing.JButton();
        jButtonRetro = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListCadre = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("modif");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButtonSearch.setText("Rechercher");
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        jLabel1.setText("Chercher un nom");

        jListNonCadre.setModel(new DefaultListModel());
        jScrollPane2.setViewportView(jListNonCadre);

        jLabel4.setText("Non Cadre");

        jLabel5.setText("Cadre");

        jButtonProm.setText("Promouvoir ->");
        jButtonProm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPromActionPerformed(evt);
            }
        });

        jButtonRetro.setText("Rétrograder <-");
        jButtonRetro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRetroActionPerformed(evt);
            }
        });

        jListCadre.setModel(new DefaultListModel());
        jScrollPane1.setViewportView(jListCadre);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonRetro)
                            .addComponent(jButtonProm))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField1)
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jButtonSearch))))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addComponent(jButtonSearch))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jButtonProm)
                        .addGap(41, 41, 41)
                        .addComponent(jButtonRetro)))
                .addGap(42, 42, 42))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
 DefaultListModel leModel = (DefaultListModel) jListCadre.getModel();
        DefaultListModel leModel2 = (DefaultListModel) jListNonCadre.getModel();
        try {
            Connection maConnexion = ConnexionBDD.getInstance();
            //requetes
            Statement requete = maConnexion.createStatement();
            ResultSet resultat = requete.executeQuery("select * from utilisateurs where categorie='cadre'");
            while (resultat.next()) {
                Integer id = resultat.getInt("id_utilisateur");
                String nom = resultat.getString("nom");
                String prenom = resultat.getString("prenom");
                leModel.addElement(id + " - " + prenom + "  " + nom);
            }
            resultat = requete.executeQuery("select * from utilisateurs where categorie='non cadre'");
            while (resultat.next()) {
                Integer id = resultat.getInt("id_utilisateur");
                String nom = resultat.getString("nom");
                String prenom = resultat.getString("prenom");
                leModel2.addElement(id + " - " + prenom + "  " + nom);
            }
//            jLabelConf.setText("Modifications réussis");
        } catch (SQLException ex) {
            Logger.getLogger(ModifRole.class.getName()).log(Level.SEVERE, null, ex);
        }    
    }//GEN-LAST:event_formWindowOpened

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        DefaultListModel leModel = (DefaultListModel) jListCadre.getModel();
        DefaultListModel leModel2 = (DefaultListModel) jListNonCadre.getModel();
        leModel.removeAllElements();
        leModel2.removeAllElements();
        try {
            Connection maConnexion = ConnexionBDD.getInstance();
            //requetes
            Statement requete = maConnexion.createStatement();
            ResultSet resultat = requete.executeQuery("select * from utilisateurs where categorie='cadre' and nom LIKE '%" + jTextField1.getText() + "%'");
            while (resultat.next()) {
                Integer id = resultat.getInt("id_utilisateur");
                String nom = resultat.getString("nom");
                String prenom = resultat.getString("prenom");
                leModel.addElement(id + " - " + prenom + "  " + nom);
            }
            resultat = requete.executeQuery("select * from utilisateurs where categorie='non cadre' and nom LIKE '%" + jTextField1.getText() + "%'");
            while (resultat.next()) {
                Integer id = resultat.getInt("id_utilisateur");
                String nom = resultat.getString("nom");
                String prenom = resultat.getString("prenom");
                leModel2.addElement(id + " - " + prenom + "  " + nom);
            }
            //            jLabelConf.setText("Modifications réussis");
        } catch (SQLException ex) {
            Logger.getLogger(ModifRole.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jButtonPromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPromActionPerformed

        String selected = jListNonCadre.getSelectedValue();
        String idUser = selected.substring(0, selected.indexOf(" -"));
        DefaultListModel leModel = (DefaultListModel) jListCadre.getModel();
        DefaultListModel leModel2 = (DefaultListModel) jListNonCadre.getModel();
        if (selected != null) {
            try {
                Connection maConnexion = ConnexionBDD.getInstance();
                Statement requete = maConnexion.createStatement();

                requete.executeUpdate("update utilisateurs set categorie='cadre' where id_utilisateur = " + idUser);

                leModel.addElement(selected);
                leModel2.remove(jListNonCadre.getSelectedIndex());
            } catch (SQLException ex) {
                Logger.getLogger(PromRetro.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner un Employé");
        }
    }//GEN-LAST:event_jButtonPromActionPerformed

    private void jButtonRetroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRetroActionPerformed
        String selected = jListCadre.getSelectedValue();
        DefaultListModel leModel = (DefaultListModel) jListNonCadre.getModel();
        DefaultListModel leModel2 = (DefaultListModel) jListCadre.getModel();
        String idUser = selected.substring(0, selected.indexOf(" -")); // recupere la chaine avant " -"
        if (selected != null) {
            try {
                Connection maConnexion = ConnexionBDD.getInstance();
                Statement requete = maConnexion.createStatement();

                requete.executeUpdate("update utilisateurs set categorie='non cadre' where id_utilisateur = " + idUser);

                leModel.addElement(selected);
                leModel2.remove(jListCadre.getSelectedIndex());
            } catch (SQLException ex) {
                Logger.getLogger(PromRetro.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner un Employé");
        }
    }//GEN-LAST:event_jButtonRetroActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModifRole.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModifRole.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModifRole.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModifRole.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ModifRole dialog = new ModifRole(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonProm;
    private javax.swing.JButton jButtonRetro;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList<String> jListCadre;
    private javax.swing.JList<String> jListNonCadre;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
